domain ATQR
context Challenge

entity Challenge
  üí¨ judgeAcceptOfficiationRequest? :judgeId
    listening:
      - RequestedJudgeParticipation!


      officiation = create Officiation(this, challenge)
      
      user = findOrCreateUser()
      user.addOfficiateChallenge(officiation)

      
      
      @NotificationService.judgeAcceptOfficiationRequest
      
      this.verifyChallengeCanBegin()
      üì£ judgeAcceptedOfficiationRequest!


    ‚öôÔ∏è judgeAcceptInvitee @participationStatus , @judge
      // code this.invitees.find(invitee => invitee.role == judge && invitee.email == judge.email? invitee.participationStatus = participationStatus.accepted : continue)
      this.addJudge(officiation)

    ‚öôÔ∏è addJudg? @judge
      this.judges.push(judge)



entity User

  ‚öôÔ∏è  addOfficiateChallenge @officiation
      
      //code this.officiatedChallenges.push(officiation)
      



service NotificationService

  judgeAcceptOfficiationRequest? :challenge :id
    sendEmail
      template: EmailjudgeAcceptsOfficiationRequest
      data: Challenge
      to: challenge.player
