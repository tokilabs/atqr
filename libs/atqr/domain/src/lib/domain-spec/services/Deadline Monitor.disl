domain ATQR

  context Challenges

    service DeadlineMonitor
      depends on ChallengesService

      /**
       * This is a cron job that runs every day and checks if any challenges are overdue
       *
       * ItsThatTimeAgain!
       *   @createdAt: DateTime
       */
      ‚è∞ NewDayStarted!
        for each :challenge in Challenges
          when .deadline is after Today
          set it's @status to .Overdue
            publish TimeToOfficiateArrived! :challengeId

          when .enrollmentDeadline is after Today
            and .createdAt is before 2 days ago
            list all .invitees that
              - have not enrolled in :challengeId
              - have not been notified

          if list is not empty
            publish ContenderForgotToPlay! :challengeId :list

          when .officiationDeadline is after Today
            and .createdAt is before 2 days ago
            list all .invitees that
              - have not entered Officiation in :challengeId
              - have not been notified

            if list is not empty
              publish JudgeForgotToPlay! :challengeId :list

          when .createdAt is before 5 days ago
            and .enrollmentDeadline is after Today
            list all .invitees that
              - have not enrolled in :challengeId
              - have been notified at most once

          if list is not empty
            publish LastChanceToPlayArrived! :challengeId :list

          when .officiationDeadline is after Today
            and .createdAt is before 5 days ago
            list all .invitees that
              - have not entered Officiation in :challengeId
              - have not been notified

            if list is not empty
              publish LastChanceToBeJudgeArrived! :challengeId :list

          when .createdAt is before 7 days ago
            and .enrollmentDeadline is after Today
            list all .invitees that
              - have not enrolled in :challengeId
              - have been notified at most once

            if list is not empty
              publish ContenderIgnoredTheChallenge! :challenge

          when .officiationDeadline is after Today
            and .createdAt is before 7 days ago
            list all .invitees that
              - have not entered Officiation in :challengeId
              - have not been notified

            if list is not empty
              publish JudgeIgnoredTheChallenge! :challenge

          when .officiationDeadline is after Today
            and .createdAt is before x days ago
            list all .invitees that
              - have not entered Officiation in :challengeId
              - have not been notified

            if list is not empty
              publish ForgotToOfficiate! :challengeId :list

          when .officiationDeadline is after Today
            and .createdAt is before x days ago
            list all .invitees that
              - have not entered Officiation in :challengeId
              - have not been notified

            if list is not empty
              publish LastChanceToOfficiateArrived! :challengeId :list

          when .officiationDeadline is after Today
            and .createdAt is before x days ago
            list all .invitees that
              - have not entered Officiation in :challengeId
              - have not been notified

            if list is not empty
              publish JudgeIgnoredTheChallenge! :challenge